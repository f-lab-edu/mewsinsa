<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.mewsinsa.product.repository.ProductRepository">
<!--상품 추가-->
  <insert id="addProduct" parameterType="com.mewsinsa.product.domain.Product" useGeneratedKeys="true" keyProperty="productId" keyColumn="product_id">
    INSERT INTO product(product_name, brand_id, category, subcategory, original_price, product_like, product_click)
    VALUES( #{productName}, #{brandId}, #{category}, #{subcategory}, #{price}, 0, 0)
  </insert>

<!--  상품 옵션 추가-->
  <insert id="addProductOption">
    INSERT INTO product_option(product_id, product_option_name, stock)
    VALUES(#{productId}, #{productOptionName}, #{stock})
  </insert>

<!--  상품 정보 업데이트-->
  <update id="updateProduct">
    UPDATE product SET
    product_name = #{productName},
    brand_id = #{brandId},
    category = #{category},
    subcategory = #{subcategory},
    original_price = #{originalPrice}
    where product_id = #{productId}
  </update>


<!--  옵션 내용 업데이트-->
  <update id="updateProductOption">
    UPDATE product_option SET
    product_option_name = #{productOptionName},
    stock = #{stock}
    where product_option_id = #{productOptionId}
  </update>

<!--  재소를 감소 시키기-->
  <update id="reduceProductOptionStock">
    UPDATE product_option SET
      stock = stock - 1
    where product_option_id = #{productOptionId}
  </update>
  <update id="updateIsCancelled">
    UPDATE ordered_product SET
    is_cancelled = #{isCancelled}
    WHERE ordered_product_id = #{orderedProductId}
  </update>

  <!--  옵션 삭제-->
  <delete id="deleteProductOption" parameterType="long">
    DELETE
    FROM product_option
    WHERE product_option_id = #{productOptionId}
  </delete>

<!--  상품 삭제-->
  <delete id="deleteProduct" parameterType="long">
    DELETE
    FROM product
    WHERE product_id = #{productId}
  </delete>

<!--  상품과 관련된 옵션 모두 찾기-->
  <select id="findProductOptions" parameterType="long" resultType="long">
    SELECT product_option_id
    FROM product_option
    WHERE product_id = #{productId}
  </select>

  <select id="findProductOptionsInfo" parameterType="long" resultType="com.mewsinsa.product.domain.ProductOption">
    SELECT
      product_option_id AS productOptionId,
      product_id AS productId,
      product_option_name AS optionName,
      stock AS stock
    FROM product_option
    WHERE product_option.product_id = #{productId}
  </select>

  <select id="findProduct" resultType="hashmap" parameterType="long">
    SELECT
      p.product_id AS productId,
      p.product_name AS productName,
      b.brand_id AS brandId,
      b.brand_name AS brandName,
      p.original_price AS originalPrice,
      p.product_like AS countOfLike,
      p.product_click AS countOfClick,
      p.category AS category,
      p.subcategory AS subcategory
    FROM product as p, brand as b
    WHERE p.product_id = #{productId} AND p.brand_id = b.brand_id
  </select>
  <select id="findProductOptionByProductOptionId"
          resultType="com.mewsinsa.product.domain.ProductOption">
    SELECT
      product_option_id AS productOptionId,
      product_id AS productId,
      product_option_name AS optionName,
      stock AS stock
    FROM product_option
    WHERE product_option.product_option_id = #{productOptionId}
  </select>
  <select id="findOneProduct" resultType="com.mewsinsa.product.domain.Product">
    SELECT
      product_id AS productId,
      product_name AS productName,
      brand_id AS brandId,
      category,
      subcategory,
      original_price AS originalPrice,
      product_like AS lLike,
      product_click AS click
    FROM product
    WHERE product_id = #{productId}
  </select>

  <select id="findOneOrderedProductInfo" resultType="com.mewsinsa.order.controller.dto.form.OrderedProductInfoDto">
    SELECT
      product.product_id AS productId,
      product.product_name AS productName,
      product_option.product_option_id AS productOptionId,
      product_option.product_option_name AS productOptionName,
      brand.brand_id AS brandId,
      brand.brand_name AS brandName,
      product.original_price AS unitOriginalPrice
    FROM product, product_option, brand
    WHERE product_option.product_option_id = #{productOptionId}
    AND product.product_id = product_option.product_id
    AND product.brand_id = brand.brand_id
  </select>

</mapper>